勿在浮沙筑高台，理论和实践55开，同等重要

这个总结是基于比较早的docker版本学习的，如果实际工作中发现敲了这里面的某些命令但不起作用，不要感觉奇怪，很正常(*￣︶￣)
不管版本怎么更新迭代，绝大多数都是兼容的，思想是相通的
你想想看设计模式出现这么多年了，为什么就只有那么些，因为思想永远是固定的那些，表面的东西是无限多的，但是思想是有限的
因此，学习要掌握核心知识，比如Java基础、设计模式、数据结构、常用算法的思想和方法这些思想、原理上的东西要多思考多总结多运用
随便谈谈docker（我也说不太好，总结说几个关键词(*￣︶￣)）：
能解决开发和运维的“矛盾”，devops开发自运维
借助docker弹性云伸缩（扩容和缩容）的手段解决峰值流量的问题
云端开发模式，mysql、redis等一些开发的工具不需要装你本机上了，可能直接搞在一个云平台上（比如阿里云）

docker hub是啥：
docker hub就是一个docker镜像的仓库，就类似于maven里面说的仓库概念，其实你仔细想想，泛泛的讲（细讲的话就是层次更细致了一点而已），GitHub也可以看做是git的远程仓库

jvm 一次编译，处处运行
docker 一次封装，处处运行
       1、更快捷的部署和交付应用
       2、弹性云伸缩（扩容和缩容）
       3、更简单的系统运维
       4、更高效的利用计算机的系统资源

一句话介绍docker：docker可以解决运行环境以及配置问题的软件容器，方便做持续集成并有助于整体发布的容器虚拟化技术

安装docker：
可以参照docker官方文档，阿里云docker安装文档、菜鸟教程、GitHub、B站等等等
CentOS6.x安装（docker-io）：不建议在6.x上安装了，我弄一大半天没成功，试过各种方式，最终由于时间原因而且觉得没必要了果断放弃(⊙︿⊙)
CentOS8.x安装（docker-ce）：我是参照菜鸟教程安装成功了，但是因为我的VPS的RAM小了点，docker run命令直接给我报错，报错内容有OOM（哈哈哈大名鼎鼎的内存不足）
CentOS7.x安装（docker-ce）：在vultr上我直接Deploy New Server的同时带上docker，这样构建一个操作系统里面会给自动给安装上docker客户端
直接测试下docker客户端好不好使docker version/docker info命令看看即可
下一步更改一下默认的docker镜像的下载源（即docker镜像的下载地址，俗称docker远程仓库），因为这个默认的docker镜像的下载源在国外服务器
下载速度死慢死慢的，更改可以使用阿里云的容器镜像服务的镜像加速器，使用加速器可以提升获取Docker官方镜像的速度

docker和虚拟机的区别：看底层原理的架构图即可，docker服务启动是秒级别的，虚拟机是分钟级别的

docker的本质：是一个精简版、高度浓缩版小型linux操作系统

docker三个核心概念：
仓库，
放东西的，用来放docker镜像的，默认docker的仓库是docker hub，但是由于GFW，都懂
docker hub我们一般不使用它作为docker镜像的下载源，而是使用它的代理，即docker镜像的国内镜像下载源
比如说
阿里云的容器镜像服务，网易的容器镜像服务等等等等
这就类似maven的仓库，道理都是互通的
学习一定要去懂原理和基本思想和方法才能做到由此及彼，举一反三，触类旁通，做到活学活用，以不变应万变
镜像（docker镜像类似于同心圆，一层套一层）：
相当于是一个模板
容器：
相当于是通过模板创建出来的对象实例
docker镜像和docker容器的关系就类似于Java类和类的对象实例的关系

分析docker的logo：
蓝色大海：docker客户端所在计算机的操作系统
鲸鱼：docker
鲸鱼背上的集装箱：docker容器实例（docker容器实例来源于docker镜像模板）

docker常用命令：
1、基本命令
docker --help（官方文档 official manual，有问题看官方文档自己练，高手都是自己练出来的，只需要掌握基本的思想和方法即可）
docker version
docker info
docker images
2、镜像相关命令
docker search 镜像名称
docker pull 镜像名称 [TAG]表示从docker仓库中拉取docker镜像，后面的TAG可选，不写表示拉取latest版本的docker镜像，写了就是拉取指定版本的docker镜像
docker rmi 镜像名称/镜像ID
3、容器相关命令（有docker镜像才可以有docker容器，这是大前提）
docker run [OPTIONS] IMAGE [COMMAND] [ARGS...]
说明：OPTIONS表示可选指令，COMMAND表示运行docker容器使用的命令，ARGS...表示可变个数形参
docker run -it 容器名称表示启动交互式容器（说白了就是以前台模式启动容器，启动docker容器并且docker宿主机可以和docker容器交互）
docker ps [OPTIONS]表示列出当前docker宿主机所有正在运行的容器，通俗点的理解就是看看鲸鱼背上有哪几个集装箱
说明：
根据原理，应该好理解这个命令是在你docker宿主机上面跑的而不是在docker容器实例里面跑的
除非你docker容器实例里面也有装了并启动了docker客户端，你跑这个命令就没问题，否则给你差不多这样的提示
bash: docker: command not found
exit（退出还停止了docker容器）或者ctrl+P+Q（退出不停止docker容器，后面还可以通过命令进入这个正在运行的容器）退出docker容器回到docker宿主机中
docker restart 容器名称/容器ID表示重启docker容器
docker stop 容器名称/容器ID表示停止docker容器（温柔停止）
docker kill 容器名称/容器ID表示强制停止docker容器
docker rm 容器ID表示删除已经停止的docker容器，若容器在运行状态你用这个就会有冲突，不过可以使用-f强制删除，即docker rm -f 容器ID
docker run -d 容器名称表示启动守护式容器（说白了就是以后台模式启动容器）
docker logs -f -t --tail 一个数字 容器ID表示查看容器日志（f：跟随最新的日志打印，t：加入时间戳，tail 一个数字：显示最后多少行日志）
docker top 容器ID表示查看容器内运行的进程
docker inspect 容器ID表示查看容器内部细节
docker attach 容器ID表示进入正在运行的容器并以命令行的方式进行交互
说明：还有一种方式exec（隔山打牛的方式），参照，进入正在运行的docker容器的两种方式.jpg
docker cp 容器ID:容器内路径 宿主机路径表示从容器内拷贝文件到docker宿主机上

技巧：linux里面有问题问男人，man ls，man top等
